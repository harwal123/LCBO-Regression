<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="0" hostname="BLRPPATIL156084" name="migrationTest.EditorialLayout1" tests="3" failures="1" timestamp="15 Dec 2017 10:57:13 GMT" time="18.474" errors="0">
  <testcase name="SummerCraftBeer" time="7.127" classname="migrationTest.EditorialLayout1"/>
  <testcase name="firesidesippers" time="5.888" classname="migrationTest.EditorialLayout1"/>
  <testcase name="BestInCanada" time="5.459" classname="migrationTest.EditorialLayout1">
    <failure type="java.lang.AssertionError" message="expected [”This is such a fantastic value, and it&#039;s my favourite Canadian sparkling wine. Dry, with a fine mousse and lively bubbles, it’s rich with notes of brioche and citrus. Like Champagne, it’s very food friendly, and it’s delicious in cocktails, especially with rose gin.”] but found [”This is such a fantastic value, and it&#039;s my favourite Canadian sparkling wine. Dry, with a fine mousse and lively bubbles, it’s rich with notes of brioche and citrus. Like Champagne, it’s very food friendly, and it’s delicious in cocktails, especially with rose gin.&quot;]">
      <![CDATA[java.lang.AssertionError: expected [”This is such a fantastic value, and it's my favourite Canadian sparkling wine. Dry, with a fine mousse and lively bubbles, it’s rich with notes of brioche and citrus. Like Champagne, it’s very food friendly, and it’s delicious in cocktails, especially with rose gin.”] but found [”This is such a fantastic value, and it's my favourite Canadian sparkling wine. Dry, with a fine mousse and lively bubbles, it’s rich with notes of brioche and citrus. Like Champagne, it’s very food friendly, and it’s delicious in cocktails, especially with rose gin."]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at migrationPages.EditorialLayout1Page.HeroImageText3(EditorialLayout1Page.java:154)
	at migrationTest.EditorialLayout1.BestInCanada(EditorialLayout1.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
    </failure>
  </testcase> <!-- BestInCanada -->
</testsuite> <!-- migrationTest.EditorialLayout1 -->
